<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>{{ SCM.link }}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>{{ SCM.repoBranch }}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.gradle.Gradle plugin="gradle@1.26">
      <switches></switches>
      <tasks>
      	{{#if buildFaces.clean}}
      		clean
      	{{/if}}
     
      	{{#if buildFaces.build}}
      		build
      	{{/if}}
      	
      </tasks>
      <rootBuildScriptDir></rootBuildScriptDir>
      <buildFile>{{ buildpacks.pomXml }}</buildFile>
      <gradleName>{{ buildpacks.buildtool }}</gradleName>
      <useWrapper>false</useWrapper>
      <makeExecutable>false</makeExecutable>
      <useWorkspaceAsHome>false</useWorkspaceAsHome>
      <wrapperLocation></wrapperLocation>
      <passAsProperties>false</passAsProperties>
    </hudson.plugins.gradle.Gradle>
    <hudson.tasks.Shell>
      <command>
      	
	     
		  docker tag {{ buildFaces.dockerImageName }}:latest {{ buildFaces.dockerServer }}:{{ buildFaces.dockerPort }}/{{ buildFaces.dockerImageName }}
		  docker push {{ buildFaces.dockerServer }}:{{ buildFaces.dockerPort }}/{{ buildFaces.dockerImageName }}
		  
		  
		
	  </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin plugin="publish-over-ssh@1.17">
      <consolePrefix>SSH: </consolePrefix>
      <delegate>
        <publishers>
          <jenkins.plugins.publish__over__ssh.BapSshPublisher>
            <configName>9151</configName>
            <verbose>false</verbose>
            <transfers>
              <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <remoteDirectory></remoteDirectory>
                <sourceFiles></sourceFiles>
                <excludes></excludes>
                <removePrefix></removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <execCommand>                
	              {{#if buildFaces.docker}}
	              <!--   docker pull 192.168.94.138:5000/uimodel:latest
					docker run 192.168.94.138:5000/uimodel -->
					
					docker pull {{ buildFaces.dockerServer }}:{{ buildFaces.dockerPort }}/{{ buildFaces.dockerImageName }}:latest
					docker run -d -p {{ buildFaces.dockerPortNumber }}:{{ buildFaces.appPortNumber }} {{ buildFaces.dockerServer }}:{{ buildFaces.dockerPort }}/{{ buildFaces.dockerImageName }}
					
				{{/if}}
				</execCommand>
                <execTimeout>120000</execTimeout>
                <usePty>false</usePty>
                <useAgentForwarding>false</useAgentForwarding>
              </jenkins.plugins.publish__over__ssh.BapSshTransfer>
            </transfers>
            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
            <usePromotionTimestamp>false</usePromotionTimestamp>
            <credentials class="jenkins.plugins.publish_over_ssh.BapSshCredentials">
              <secretPassphrase>{AQAAABAAAAAQGUqf+fUyLfeea9m/i6pfZqoMXJ4PrVjWI/lK4pd/2hc=}</secretPassphrase>
              <key></key>
              <keyPath></keyPath>
              <username>Altimetrik\dkumarasamy</username>
            </credentials>
          </jenkins.plugins.publish__over__ssh.BapSshPublisher>
        </publishers>
        <continueOnError>false</continueOnError>
        <failOnError>false</failOnError>
        <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
        <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.maven3.ArtifactoryMaven3Configurator plugin="artifactory@2.10.3">
      <details>
        <artifactoryName>192.168.84.102</artifactoryName>
        <artifactoryUrl>http://192.168.84.102:8081/artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect>libs-release-local</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deployReleaseRepository>
        <deploySnapshotRepository>
          <keyFromText></keyFromText>
          <keyFromSelect>libs-snapshot-local</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deploySnapshotRepository>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>192.168.84.102</artifactoryName>
        <artifactoryUrl>http://192.168.84.102:8081/artifactory</artifactoryUrl>
        <resolveSnapshotRepository>
          <keyFromText></keyFromText>
          <keyFromSelect></keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </resolveSnapshotRepository>
        <resolveReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect></keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </resolveReleaseRepository>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <deployArtifacts>true</deployArtifacts>
      <artifactDeploymentPatterns>
        <includePatterns></includePatterns>
        <excludePatterns></excludePatterns>
      </artifactDeploymentPatterns>
      <includeEnvVars>false</includeEnvVars>
      <deployBuildInfo>true</deployBuildInfo>
      <runChecks>false</runChecks>
      <violationRecipients></violationRecipients>
      <includePublishArtifacts>false</includePublishArtifacts>
      <scopes></scopes>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <matrixParams></matrixParams>
      <enableIssueTrackerIntegration>false</enableIssueTrackerIntegration>
      <filterExcludedArtifactsFromBuild>true</filterExcludedArtifactsFromBuild>
      <enableResolveArtifacts>false</enableResolveArtifacts>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <licenseAutoDiscovery>true</licenseAutoDiscovery>
      <disableLicenseAutoDiscovery>false</disableLicenseAutoDiscovery>
      <aggregateBuildIssues>false</aggregateBuildIssues>
      <recordAllDependencies>false</recordAllDependencies>
      <blackDuckRunChecks>false</blackDuckRunChecks>
      <blackDuckAppName></blackDuckAppName>
      <blackDuckAppVersion></blackDuckAppVersion>
      <blackDuckReportRecipients></blackDuckReportRecipients>
      <blackDuckScopes></blackDuckScopes>
      <blackDuckIncludePublishedArtifacts>false</blackDuckIncludePublishedArtifacts>
      <autoCreateMissingComponentRequests>true</autoCreateMissingComponentRequests>
      <autoDiscardStaleComponentRequests>true</autoDiscardStaleComponentRequests>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.maven3.ArtifactoryMaven3Configurator>
  </buildWrappers>
</project>